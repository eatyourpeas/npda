#!/bin/bash

# scripts may need to be made executable on some platforms before they can be run
# chmod +x <filename> is the command to do this on unixy systems

# copies the Caddy root CA file into a local trust store
# This is needed so that you can have a HTTPS connection to your local development environment
# On some browsers you also need to manually import the root CA file into the browser's trust store
# See https://caddyserver.com/docs/running#local-https-with-docker

# Select OS
echo "Select your operating system:"
echo "1. Windows"
echo "2. Linux"
echo "3. macOS"
echo "4. WSL2 (run from within a WSL2 terminal)"

# Read user's choice
read -p "Enter the number of your choice: " choice

# Check the user's choice and execute code accordingly
case $choice in
1)
  echo "You chose Windows."
  docker compose cp \
    caddy:/data/caddy/pki/authorities/local/root.crt \
    %TEMP%/root.crt &&
    certutil -addstore -f "ROOT" %TEMP%/root.crt
  ;;
2)
  echo "You chose Linux."
  sudo docker compose cp \
    caddy:/data/caddy/pki/authorities/local/root.crt \
    /usr/local/share/ca-certificates/root.crt &&
  sudo update-ca-certificates &&
  sudo cp /usr/local/share/ca-certificates/root.crt . &&
  sudo chown $USER:$USER root.crt
  ;;
3)
  echo "You chose macOS."
  docker compose cp \
    caddy:/data/caddy/pki/authorities/local/root.crt \
    /tmp/root.crt &&
    sudo security add-trusted-cert -d -r trustRoot \
      -k /Library/Keychains/System.keychain /tmp/root.crt
  ;;
4)
  echo "You chose WSL2."
  export WINTEMP=$(wslpath $(cmd.exe /C "echo %TEMP%" 2>/dev/null | tr -d '\r'))
  export USERNAME=$(wslpath $(cmd.exe /C "echo %USERNAME%" 2>/dev/null | tr -d '\r'))
  echo "Windows temp directory (automatically found): ${WINTEMP}"
  echo "Logged in Windows user (automatically found): ${USERNAME}"
  docker compose cp caddy:"/data/caddy/pki/authorities/local/root.crt" "${WINTEMP}/root.crt"
  runas.exe /user:${USERNAME} "cmd.exe /C %CD%\certutil -addstore -f "ROOT" %TEMP%/root.crt %CD%"
  ;;
*)
  echo "Invalid choice. Please select a valid option (1, 2, or 3)."
  ;;
esac
